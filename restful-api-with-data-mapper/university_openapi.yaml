openapi: 3.0.1
info:
  title: University
  version: 0.1.0
servers:
- url: "{server}:{port}/university"
  variables:
    server:
      default: http://localhost
    port:
      default: port
paths:
  /persons:
    get:
      operationId: getPersons
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    put:
      operationId: putPersons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "404":
          description: NotFound
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    post:
      operationId: postPersons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "409":
          description: Conflict
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /persons/{id}/enroll:
    post:
      operationId: postPersonsIdEnroll
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Course'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "404":
          description: NotFound
        "500":
          description: InternalServerError
components:
  schemas:
    Course:
      required:
      - credits
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        credits:
          type: integer
          format: int64
    Student:
      required:
      - age
      - courses
      - fullName
      - id
      - totalCredits
      - visaType
      type: object
      properties:
        id:
          type: string
        fullName:
          type: string
        age:
          type: integer
          format: int64
        courses:
          type: array
          items: {}
        totalCredits:
          type: integer
          format: int64
        visaType:
          type: string
    Person:
      required:
      - age
      - country
      - firstName
      - id
      - lastName
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int64
        country:
          type: string
